version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - confd:/etc/nginx/conf.d
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    networks:
      - front-tier
      - back-tier

  vote:
    container_name: vote
    build: ./vote
    depends_on:
      - redis
    environment:
      - VIRTUAL_HOST=vote.127.0.0.1.nip.io
    networks:
      - front-tier
      - back-tier

  result:
    container_name: result
    build: ./result
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=result.127.0.0.1.nip.io
    networks:
      - front-tier
      - back-tier

  worker:
    container_name: worker
    build: ./worker
    depends_on:
      - redis
      - db
    networks:
      - back-tier

  redis:
    container_name: redis
    image: redis:alpine
    volumes:
      - redis-data:/data
    networks:
      - back-tier

  db:
    container_name: db
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - back-tier

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: "prueba@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "prueba1234"
    ports:
      - 5002:80

volumes:
  db-data:
  redis-data:
  html:
  certs:
  vhostd:
  confd:

networks:
  front-tier:
  back-tier: